\title{Rendering}{rendering}

\use-plugin{booklitdoc}

A \italic{renderer} is the function from an evaluated section to some generated
content ready for publishing.

As of right now, there is only one renderer: \reference{html-renderer}{HTML}.

\split-sections

\section{
  \title{The HTML Renderer}{html-renderer}

  The HTML renderer uses Go's built-in
  \link{\code{html/template}}{https://golang.org/pkg/html/template} package.
  Booklit comes with some extremely barebones templates that don't include any
  styling at all. You'll probably want to change that.

  To override templates, first create a directory for your \code{.tmpl} files,
  and then provide the \code{--html-templates} flag when building your docs:

  \code{{{
  booklit -i ./index.any -o ./docs \
      --html-templates ./html
  }}}

  \section{
    \title{Base Templates}

    The following template files will be executed if present under \code{./html},
    with the corresponding data type as \code{.}:

    \table{
      \table-row{template}{type for \code{.}}
    }{
      \table-row{\code{page.tmpl}}{\godoc{*booklit.Section}}
    }{
      \table-row{\code{section.tmpl}}{\godoc{*booklit.Section}}
    }{
      \table-row{\code{link.tmpl}}{\godoc{booklit.Link}}
    }{
      \table-row{\code{list.tmpl}}{\godoc{booklit.List}}
    }{
      \table-row{\code{paragraph.tmpl}}{\godoc{booklit.Paragraph}}
    }{
      \table-row{\code{preformatted.tmpl}}{\godoc{booklit.Preformatted}}
    }{
      \table-row{\code{reference.tmpl}}{\godoc{*booklit.Reference}}
    }{
      \table-row{\code{sequence.tmpl}}{\godoc{booklit.Sequence}}
    }{
      \table-row{\code{string.tmpl}}{\godoc{booklit.String}}
    }{
      \table-row{\code{target.tmpl}}{\godoc{booklit.Target}}
    }{
      \table-row{\code{toc.tmpl}}{\godoc{*booklit.Section}}
    }{
      \table-row{\code{aside.tmpl}}{\godoc{booklit.Aside}}
    }{
      \table-row{\code{definitions.tmpl}}{\godoc{booklit.Definitions}}
    }{
      \table-row{\code{table.tmpl}}{\godoc{booklit.Table}}
    }{
      \table-row{\code{image.tmpl}}{\godoc{booklit.Image}}
    }{
      \table-row{\code{block.tmpl}}{\godoc{booklit.Block}}
    }{
      \table-row{\code{element.tmpl}}{\godoc{booklit.Element}}
    }

    The most impactful of these is \code{page.tmpl}, which is used for the
    top-level section for each "page" rendered. This is where you would place
    assets in \code{<head>}, for example.
  }

  \section{
    \title{Custom Templates}

    In addition to the above templates, using \godoc{booklit.Styled} will
    result in the renderer using the template named after the style being
    executed with the content being styled as \code{.}.

    For example, \reference{bold} is implemented in the
    \reference{baselit}{\code{baselit}} plugin by returning:

    \code{{{
      booklit.Styled{
        Content: content,
        Style:   booklit.StyleBold,
      }
    }}}

    ...where \code{booklit.StyleBold} is a \code{const} whose value is
    \code{"bold"}, but could just as easily be any other string.

    Booklit's base templates include a \code{bold.tmpl} template:

    \code{{{
    <strong>{{. | render}}</strong>
    }}}

    Thus, when content is styled with \code{"bold"}, it will render in
    \bold{strong tags}.
  }
}
